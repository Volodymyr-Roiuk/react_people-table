{"version":3,"sources":["Api.js","Components/person/Person.js","Components/peopleTable/PeopleTable.js","Components/newPerson/NewPerson.js","App.js","index.js"],"names":["getPeople","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","people","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","apply","this","arguments","Person","_this$props","props","_this$props$person","person","id","name","sex","age","born","died","century","father","mother","children","onClick","selectedId","react_default","createElement","Table","Row","active","textAlign","data-person-id","Cell","className","map","child","index","length","concat","PureComponent","PeopleTable","state","selectedPersonId","selectPerson","event","_this","setState","Number","currentTarget","dataset","personId","_this2","celled","selectable","Header","HeaderCell","Body","Components_person_Person","key","NewPerson","addNewPerson","showForm","bornDate","deathDate","gender","buttonClick","getGenderOpinons","text","value","nameChange","target","dateBornChange","dateDeathChange","motherChange","textContent","fatherChange","genderChange","getMotherOptions","filter","getFatherOptions","onSubmit","_this$state","_this$state2","genderOptions","motherOptions","fatherOptions","Form","Input","fluid","label","placeholder","onChange","Group","widths","Select","options","Button","Component","App","filterQuery","sortQuery","getFilterQuery","getFilteredPeople","createSelector","includes","loadPeopleFromServer","modifiedPeople","_objectSpread","Math","ceil","filteredPeople","changeFilterValue","getSelectOptions","changeSelectValue","sortPeople","toConsumableArray","sort","b","localeCompare","prevState","newPerson","selectOptions","sortedPeople","Fragment","newPerson_NewPerson","peopleTable_PeopleTable","React","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.12ce8a5a.chunk.js","sourcesContent":["export const getPeople = async () => {\n  const people = await fetch('https://mate-academy.github.io/react_people-table/api/people.json');\n\n  return people.json();\n}\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport './Person.css';\nimport { Table } from 'semantic-ui-react';\n\nclass Person extends PureComponent {\n  render() {\n    const { person: { id, name, sex, age, born, died, century, father, mother, children }, onClick, selectedId } = this.props;\n\n    return (\n      <Table.Row active={selectedId === id} textAlign=\"center\" onClick={onClick} data-person-id={id}>\n        <Table.Cell>{id}</Table.Cell>\n        <Table.Cell className={born < 1650 ? 'wasBornBefore1650' : null}>{name}</Table.Cell>\n        <Table.Cell className={sex === 'm' ? 'male' : 'female'}>{sex}</Table.Cell>\n        <Table.Cell className={age >= 65 ? 'ageMore65' : null}>{age}</Table.Cell>\n        <Table.Cell>{born}</Table.Cell>\n        <Table.Cell>{died}</Table.Cell>\n        <Table.Cell>{century}</Table.Cell>\n        <Table.Cell>{mother}</Table.Cell>\n        <Table.Cell>{father}</Table.Cell>\n        <Table.Cell>\n          {children.map((child, index) => children.length - 1 !== index ? `${child.name}, ` : child.name)}\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    father: PropTypes.string,\n    mother: PropTypes.string,\n  }).isRequired,\n  personId: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Person;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport Person from '../person/Person';\n\nclass PeopleTable extends PureComponent {\n  state = {\n    selectedPersonId: null,\n  };\n\n  selectPerson = (event) => {\n    this.setState({\n      selectedPersonId: Number(event.currentTarget.dataset.personId),\n    });\n  };\n\n  render() {\n    const { people } = this.props;\n    const { selectedPersonId } = this.state;\n\n    return (\n      <Table celled selectable>\n        <Table.Header>\n          <Table.Row textAlign=\"center\">\n            <Table.HeaderCell>id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Sex</Table.HeaderCell>\n            <Table.HeaderCell>Age</Table.HeaderCell>\n            <Table.HeaderCell>Born</Table.HeaderCell>\n            <Table.HeaderCell>Died</Table.HeaderCell>\n            <Table.HeaderCell>Century</Table.HeaderCell>\n            <Table.HeaderCell>Mother</Table.HeaderCell>\n            <Table.HeaderCell>Father</Table.HeaderCell>\n            <Table.HeaderCell>Children</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {people.map((person, index) => (\n            <Person\n              key={index + 1}\n              person={person}\n              personId={index + 1}\n              onClick={this.selectPerson}\n              selectedId={selectedPersonId}\n            />\n          ))}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    father: PropTypes.string,\n    mother: PropTypes.string,\n  })).isRequired,\n};\n\nexport default PeopleTable;\n","import React, {Component} from 'react';\nimport { Form, Button } from 'semantic-ui-react'\n\nclass NewPerson extends Component {\n  state = {\n    addNewPerson: this.props.addNewPerson,\n    showForm: false,\n    name: null,\n    bornDate: null,\n    deathDate: null,\n    gender: null,\n    mother: '',\n    father: '',\n  };\n\n  buttonClick = (event) => {\n    this.setState({\n      showForm: true,\n    });\n  };\n\n  getGenderOpinons = () => {\n    return [\n      { key: 'male', text: 'Male', value: 'male' },\n      { key: 'female', text: 'Female', value: 'female' },\n    ];\n  };\n\n  nameChange = (event) => {\n    this.setState({\n      name: event.target.value,\n    });\n  };\n\n  dateBornChange = (event) => {\n    this.setState({\n      bornDate: event.target.value,\n    });\n  };\n\n  dateDeathChange = (event) => {\n    this.setState({\n      deathDate: event.target.value,\n    });\n  };\n\n  motherChange = (event) => {\n    this.setState({\n      mother: event.target.textContent,\n    });\n  };\n\n  fatherChange = (event) => {\n    this.setState({\n      father: event.target.textContent,\n    });\n  };\n\n  genderChange = (event) => {\n    this.setState({\n      gender: event.target.textContent,\n    });\n  };\n\n  getMotherOptions = (people) => {\n    const { bornDate } = this.state;\n\n    if (bornDate === null) {\n      return;\n    }\n\n    return people.filter(person => (person.born < bornDate - 10 && person.died >= bornDate) && person.sex === 'f')\n      .map(person => ({\n        key: person.name,\n        text: person.name,\n        value: person.name,\n      }));\n  };\n\n  getFatherOptions = (people) => {\n    const { bornDate } = this.state;\n\n    if (bornDate === null) {\n      return;\n    }\n\n    return people.filter(person => (person.born < bornDate - 10 && person.died >= bornDate) && person.sex === 'm')\n      .map(person => ({\n        key: person.name,\n        text: person.name,\n        value: person.name,\n      }));\n  };\n\n  onSubmit = (event) => {\n    const { name, bornDate, deathDate, gender, mother, father, addNewPerson } = this.state;\n\n    addNewPerson(name, bornDate, deathDate, gender === 'Male' ? 'm' : 'f', mother, father);\n\n    this.setState({\n      showForm: false,\n      name: null,\n      bornDate: null,\n      deathDate: null,\n      gender: null,\n      mother: '',\n      father: '',\n    });\n  };\n\n\n  render() {\n    const { showForm, name, bornDate, deathDate } = this.state;\n    const { people } = this.props;\n    const genderOptions = this.getGenderOpinons();\n    const motherOptions = this.getMotherOptions(people);\n    const fatherOptions = this.getFatherOptions(people);\n\n\n    return (\n      showForm\n        ? (\n          <Form>\n            <Form.Input fluid label=\"Full name\" placeholder=\"Full name\" value={name} onChange={this.nameChange} />\n            <Form.Group widths=\"equal\">\n              <Form.Input fluid label=\"Year of born\" placeholder=\"xxxx\" value={bornDate} onChange={this.dateBornChange} />\n              <Form.Input fluid label=\"Year of death\" placeholder=\"xxxx\" value={deathDate} onChange={this.dateDeathChange} />\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Select label=\"Mother\" placeholder=\"Mother\" options={motherOptions} onChange={this.motherChange} />\n              <Form.Select label=\"Father\" placeholder=\"Father\" options={fatherOptions} onChange={this.fatherChange} />\n            </Form.Group>\n            <Form.Select placeholder=\"Gender\" options={genderOptions} onChange={this.genderChange} />\n            <Button className=\"option__item\" onClick={this.onSubmit}>Add new person</Button>\n          </Form>\n        )\n        : <Button className=\"option__item\" onClick={this.buttonClick}>New Person</Button>\n    );\n  }\n}\n\nexport default NewPerson;\n","import React from 'react';\nimport './App.css';\nimport { Input, Select } from 'semantic-ui-react';\nimport { createSelector } from 'reselect';\nimport { getPeople } from './Api';\nimport PeopleTable from './Components/peopleTable/PeopleTable';\nimport NewPerson from './Components/newPerson/NewPerson';\n\nclass App extends React.PureComponent {\n  state = {\n    people: [],\n    filterQuery: '',\n    sortQuery: null,\n  };\n\n  componentDidMount() {\n    this.loadPeopleFromServer();\n  }\n\n  getPeople = state => state.people;\n\n  getFilterQuery = state => state.filterQuery;\n\n  getFilteredPeople = createSelector(\n    [this.getPeople, this.getFilterQuery],\n    (people, filterQuery) => people.filter(person => person.name.includes(filterQuery)\n        || person.father.includes(filterQuery)\n        || person.mother.includes(filterQuery))\n  );\n\n  loadPeopleFromServer = async () => {\n    const people = await getPeople();\n    const modifiedPeople = people.map((person, index) => ({\n      ...person,\n      id: index + 1,\n      age: person.died - person.born,\n      century: Math.ceil(person.died / 100),\n      father: person.father ? person.father : '',\n      mother: person.mother ? person.mother : '',\n      children: people.filter(child => child.father === person.name || child.mother === person.name),\n    }));\n\n    this.setState({\n      people: modifiedPeople,\n      filteredPeople: modifiedPeople,\n    });\n  };\n\n  changeFilterValue = (event) => {\n    this.setState({\n      filterQuery: event.target.value,\n    });\n  };\n\n  getSelectOptions = () => ([\n    { key: 'id', value: 'id', text: 'id' },\n    { key: 'name', value: 'name', text: 'name' },\n    { key: 'sex', value: 'sex', text: 'sex' },\n    { key: 'age', value: 'age', text: 'age' },\n    { key: 'born', value: 'born', text: 'born' },\n    { key: 'died', value: 'died', text: 'died' },\n    { key: 'century', value: 'century', text: 'century' },\n  ]);\n\n  changeSelectValue = (event) => {\n    this.setState({\n      sortQuery: event.target.textContent,\n    });\n  };\n\n  sortPeople = (people, sortQuery) => {\n    switch (sortQuery) {\n      case 'id':\n        return [...people].sort((a, b) => a.id - b.id);\n      case 'name':\n        return [...people].sort((a, b) => a.name.localeCompare(b.name));\n      case 'sex':\n        return [...people].sort((a, b) => a.sex.localeCompare(b.sex));\n      case 'age':\n        return [...people].sort((a, b) => a.age - b.age);\n      case 'born':\n        return [...people].sort((a, b) => a.born - b.born);\n      case 'died':\n        return [...people].sort((a, b) => a.died - b.died);\n      case 'century':\n        return [...people].sort((a, b) => a.century - b.century);\n      default:\n        return people;\n    }\n  };\n\n  addNewPerson = (name, bornDate, deathDate, gender, mother, father) => {\n    this.setState((prevState) => {\n      const { people } = prevState;\n      const newPerson = {\n        id: people.length + 1,\n        name,\n        mother,\n        father,\n        sex: gender,\n        born: bornDate,\n        died: deathDate,\n        age: deathDate - bornDate,\n        century: Math.ceil(deathDate / 100),\n        children: people.filter(child => child.father === name || child.mother === name),\n      };\n\n      return ({\n        people: [...people, newPerson],\n      });\n    });\n  }\n\n  render() {\n    const { filterQuery, sortQuery } = this.state;\n    const selectOptions = this.getSelectOptions();\n    const filteredPeople = this.getFilteredPeople(this.state);\n    const sortedPeople = this.sortPeople(filteredPeople, sortQuery);\n\n    return (\n      <>\n        <section className=\"optionsContainer\">\n          <Input className=\"option__item\" placeholder=\"Filter...\" value={filterQuery} onChange={this.changeFilterValue} />\n          <Select className=\"option__item\" placeholder=\"Sort by...\" options={selectOptions} onChange={this.changeSelectValue} />\n          <NewPerson className=\"option__item\" people={this.state.people} addNewPerson={this.addNewPerson}/>\n        </section>\n        <PeopleTable people={sortedPeople} />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}